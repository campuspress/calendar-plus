{"version":3,"file":"editor-blocks.js","mappings":"YAAA,MAAM,kBAACA,GAAqBC,GAAGC,QACzB,cAACC,EAAa,SAAEC,GAAYH,GAAGI,SAC/B,GAACC,GAAML,GAAGM,MACV,kBAACC,GAAqBP,GAAGQ,QACzB,YACFC,EAAW,aACXC,EAAY,cACZC,EAAa,UACbC,EAAS,sBACTC,EAAqB,mBACrBC,EAAkB,qBAClBC,EAAoB,yBACpBC,EAAwB,qBACxBC,EAAoB,gBACpBC,EAAe,cACfC,EAAa,cACbC,GACApB,GAAGqB,YACD,WAACC,GAAcC,OAAOvB,GAAGwB,MACvBC,iBAAkBC,GAAqB1B,GAEzC2B,EAAiB,SAASC,GAC5B,MAAQC,EAAYC,GAAkB3B,EAAS,IACzC4B,EAAaH,EAAMG,WAAaH,EAAMG,WAAa,IACjDC,EAAOC,GAAa9B,EAAS4B,GAC/BG,EAAWN,EAAMM,SAAWN,EAAMM,SAAW,GAE7CC,EAAO,GACb,IAAK,MAAMC,KAAQJ,EAEfG,EAAKE,KACDnC,EACIgB,EACA,CACIoB,MAAOF,EAAKE,MACZC,SAA6C,IAApCL,EAASM,QAASJ,EAAKK,OAChCC,IAAKN,EAAKE,MACVK,MAAO,CAAEC,aAAc,GACvBC,SAAU,SAASJ,GACVb,EAAMkB,UACPlB,EAAMkB,SAAUV,EAAKK,MAAOA,EAEpC,KAKhB,IAAIM,EAAW,CACX7C,EACIa,EACA,CAAE6B,aAAc,GAChB1C,EACIiB,EACA,CACIsB,MAAOZ,EACPgB,SAAU,SAASJ,GACf,MAAMO,EAAWpB,EAAMG,WAAWkB,QAAO,SAASb,GAC9C,OAAoD,IAA7CA,EAAKE,MAAMY,cAAcV,QAAQC,EAC5C,IACAR,EAASe,GACTlB,EAAcW,EAClB,KAIZvC,EACIc,EACA,CACI2B,MAAO,CAAEQ,UAAW,MAExBjD,EAAce,EAAsB,CAAC,EAAGkB,KAa/C,OAVIP,EAAMU,OACPS,EAASK,QACLlD,EACIa,EACA,CAAE6B,aAAc,GAChB1C,EAAeW,EAAuB,CAAEwC,MAAO,GAAKzB,EAAMU,SAK9DpC,EACHa,EACA,CAAE6B,aAAc,IAChB1C,EAAcY,EAAoB,CAAC,EAAGiC,GAE/C,EAEAhD,EAAmB,yBAA0B,CACzCuD,MAAOjD,EAAI,mBACXkD,YAAalD,EAAI,kCACjBmD,SAAW,UACXC,KAAM,CACFC,IAAK,gBAETC,WAAY,CACRH,SAAU,CAAC,EACXI,YAAa,CAAC,EACdC,WAAY,CAAC,EACbC,kBAAmB,CAAC,EACpBC,WAAY,CAAC,EACbC,YAAa,CAAC,GAElBC,KAAM3C,GAAY,SAAU4C,GACxB,MAAO,CACHnC,WAAYmC,EAAO,QAAQC,iBAAiB,WAAY,0BAA2B,CAACC,UAAW,IAEvG,GAJM9C,EAID,SAAUM,GACX,IAAIyC,EAAkB,CAAE,CAAE5B,MAAO,GAAIH,MAAOjC,EAAI,SAQhD,OANIuB,EAAMG,YACNH,EAAMG,WAAWuC,SAASd,IACtBa,EAAgBhC,KAAK,CAACI,MAAMe,EAASe,GAAIjC,MAAMkB,EAASgB,MAAM,IAI/DtE,EAAc,MAAO,CAAC,EAAG,CAC5BA,EAAe,MAAO,CAAC,EAAGA,EAAe,MAAO,CAACwD,IAAKe,qBAAqBC,kBAC3ExE,EAAeK,EAAmB,CAAC,EAC/BL,EAAeU,EAAW,CAAE0C,MAAOjD,EAAI,qBAAuBsE,aAAa,GACvEzE,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWH,SACxBlB,MAAOjC,EAAI,YACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEpB,SAAUf,GACrC,EACAoC,QAASR,IAEbnE,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWC,YACxBtB,MAAOjC,EAAI,eACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEhB,YAAanB,GACxC,EACAoC,QAAS,CACL,CAACpC,MAAO,QAASH,MAAO,YACxB,CAACG,MAAO,MAAOH,MAAO,YAG9BpC,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWE,WACxBvB,MAAOjC,EAAI,0BACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEf,WAAYpB,GACvC,EACAoC,QAAS,CACL,CAACpC,MAAO,IAAKH,MAAO,UACpB,CAACG,MAAO,IAAKH,MAAO,UAG5BpC,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWG,kBACxBxB,MAAOjC,EAAI,qBACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEd,kBAAmBrB,GAC9C,EACAoC,QAAS,CACL,CAACpC,MAAO,IAAKH,MAAO,OACpB,CAACG,MAAO,IAAKH,MAAO,cAG5BpC,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWI,WACxBzB,MAAOjC,EAAI,cACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEb,WAAYtB,GACvC,EACAoC,QAAS,CACL,CAACpC,MAAO,IAAKH,MAAO,MACpB,CAACG,MAAO,IAAKH,MAAO,QAG5BpC,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAWK,YACxB1B,MAAOjC,EAAI,eACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEZ,YAAavB,GACxC,EACAoC,QAAS,CACL,CAACpC,MAAO,MAAOH,MAAO,SACtB,CAACG,MAAO,MAAOH,MAAO,QACtB,CAACG,MAAO,MAAOH,MAAO,SACtB,CAACG,MAAO,MAAOH,MAAO,cAM9C,IACA,IAAAwC,GACI,OAAO,IACX,IAGJ/E,EAAmB,sBAAuB,CACtCuD,MAAOjD,EAAI,gBACXkD,YAAalD,EAAI,mCACjBmD,SAAW,UACXC,KAAM,CACFC,IAAK,gBAETC,WAAY,CACRoB,SAAU,CAAC,GAEf,IAAAd,CAAKrC,GACD,OAAO1B,EAAc,MAAO,CAAC,EAAG,CAC5BA,EAAe,MAAO,CAAC,EAAGA,EAAewB,EAAkB,CACvDsD,MAAO,sBACPrB,WAAY/B,EAAM+B,WAClBsB,yBAA0B,WACtB,OAAO/E,EAAe,MAAO,CAAC,EAAG,OACrC,KAEJA,EAAeK,EAAmB,CAAC,EAC/BL,EAAeU,EAAW,CAAE0C,MAAOjD,EAAI,kBAAoBsE,aAAa,GACpEzE,EAAcO,EAAa,CACvBgC,MAAOb,EAAM+B,WAAWoB,SACxBzC,MAAOjC,EAAI,YACX6E,KAAM7E,EAAI,6EACV8E,KAAM,SACNtC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEG,SAAUtC,GACrC,OAKpB,EACA,IAAAqC,GACI,OAAO,IACX,IAGJ/E,EAAmB,4BAA6B,CAC5CuD,MAAOjD,EAAI,eACXkD,YAAalD,EAAI,yBACjBmD,SAAW,UACXC,KAAM,CACFC,IAAK,gBAETC,WAAY,CACRyB,OAAQ,CACJC,QAAS,GAEbC,YAAa,CACTD,SAAS,GAEb7B,SAAU,CACN6B,QAAS,IAEbE,iBAAkB,CACdJ,KAAM,UACNE,SAAS,GAEbG,gBAAiB,CACbL,KAAM,UACNE,SAAS,GAEbI,eAAgB,CACZN,KAAM,UACNE,SAAS,GAEbK,OAAQ,CACJL,QAAS,QAEbM,QAAS,CACLN,QAAS,IAGjBpB,KAAM3C,GAAY,SAAU4C,GACxB,MAAO,CACHnC,WAAYmC,EAAO,QAAQC,iBAAiB,WAAY,0BAA2B,CAACC,UAAW,IAEvG,GAJM9C,EAID,SAAUM,GACX,IAAIyC,EAAkB,GAClBuB,EAAqBhE,EAAM+B,WAAWH,SACrCqC,MAAO,KACPC,KACG,SAAUrD,GACN,OAAOsD,SAAUtD,EAAMuD,OAC3B,IAEH/C,QACG,SAASgD,GACL,OAASC,MAAOD,EACpB,IAGJrE,EAAMG,YACNH,EAAMG,WAAWuC,SAASd,IACtBa,EAAgBhC,KAAK,CAACI,MAAMe,EAASe,GAAIjC,MAAMkB,EAASgB,MAAM,IAGtE,MAAM2B,EAAiB,CACnBjG,EAAcQ,EAAc,CACxB+B,MAAOb,EAAM+B,WAAWyB,OACxB9C,MAAOjC,EAAI,oBACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEQ,OAAQ3C,GACnC,EACA2D,IAAK,EACLC,IAAK,MAETnG,EACIyB,EACA,CACIW,MAAOjC,EAAI,YACX0B,WAAYsC,EACZnC,SAAU0D,EACV9C,SAAU,SAASyB,EAAI9B,GAoBnB,MAAM6D,EAAQV,EAAmBpD,QAAS+B,GAErC9B,IAAoB,IAAX6D,EACVV,EAAmBvD,KAAMkC,IACN,IAAX+B,UACDV,EAAoBU,GAE/B1E,EAAMgD,cAAe,CACjBpB,SAAUoC,EAAmBW,KAAM,MAE3C,IAGRrG,EAAckB,EAAe,CACzBqB,MAAOb,EAAM+B,WAAW2B,YACxB/C,QAASX,EAAM+B,WAAW2B,YAC1BhD,MAAOjC,EAAI,uBACXwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEU,YAAa7C,GACxC,IAEJvC,EAAcY,EAAoB,CAAC,EAAG,CAClCZ,EACIa,EACA,CAAC,EACDb,EACIW,EACA,CAAEwC,MAAO,GACThD,EAAI,8BAGZH,EACIgB,EACA,CACIoB,MAAOjC,EAAI,YACXkC,QAASX,EAAM+B,WAAW4B,iBAC1B1C,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEW,iBAAkB9C,GAC7C,IAGRvC,EACIgB,EACA,CACIoB,MAAOjC,EAAI,WACXkC,QAASX,EAAM+B,WAAW6B,gBAC1B3C,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEY,gBAAiB/C,GAC5C,IAGRvC,EACIgB,EACA,CACIoB,MAAOjC,EAAI,kBACXkC,QAASX,EAAM+B,WAAW8B,eAC1B5C,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAACa,eAAgBhD,GAC1C,MAIZvC,EAAcS,EAAe,CACzB8B,MAAOb,EAAM+B,WAAW+B,OACxBpD,MAAOjC,EAAI,UACXwE,QAAS,CACL,CAACpC,MAAO,OAAQH,MAAOjC,EAAG,SAC1B,CAACoC,MAAO,OAAQH,MAAOjC,EAAG,UAE9BwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEc,OAAQjD,GACnC,KAkBR,MAf+B,SAA5Bb,EAAM+B,WAAW+B,QAChBS,EAAe9D,KAAKnC,EAAcS,EAAe,CAC7C8B,MAAOb,EAAM+B,WAAWgC,QACxBrD,MAAOjC,EAAI,aACXwE,QAAS,CACL,CAACpC,MAAO,EAAG,MAASpC,EAAG,cACvB,CAACoC,MAAO,EAAG,MAASpC,EAAG,cACvB,CAACoC,MAAO,EAAG,MAASpC,EAAG,eAE3BwC,SAAU,SAASJ,GACfb,EAAMgD,cAAe,CAAEe,QAASI,SAAStD,IAC7C,KAIDvC,EAAc,MAAO,CAAC,EAAG,CAC5BA,EAAe,MAAO,CAAC,EAAGA,EAAewB,EAAkB,CACvDsD,MAAO,4BACPrB,WAAY/B,EAAM+B,cAEtBzD,EAAeK,EAAmB,CAAC,EAC/BL,EAAeU,EAAW,CAAE0C,MAAOjD,EAAI,mBAAqBsE,aAAa,MAClEwB,KAInB,IACA,IAAArB,GACI,OAAO,IACX,G","sources":["webpack://calendar-plus/./_src/admin/editor-shortcode/editor-blocks.js"],"sourcesContent":["const {registerBlockType} = wp.blocks;\nconst {createElement, useState} = wp.element;\nconst {__} = wp.i18n;\nconst {InspectorControls} = wp.editor;\nconst {\n    TextControl,\n    RangeControl,\n    SelectControl,\n    PanelBody,\n    __experimentalHeading,\n    __experimentalView,\n    __experimentalSpacer,\n    __experimentalScrollable,\n    __experimentalVStack,\n    CheckboxControl,\n    SearchControl,\n    ToggleControl\n} = wp.components;\nconst {withSelect} = window.wp.data;\nconst { serverSideRender: ServerSideRender } = wp;\n\nconst CategorySelect = function(props) {\n    const [ searchText, setSearchText ] = useState('');\n    const categories = props.categories ? props.categories : [];\n    const [ items, setItems ] = useState(categories);\n    const selected = props.selected ? props.selected : [];\n\n    const list = [];\n    for (const item of items) {\n\n        list.push(\n            createElement(\n                CheckboxControl,\n                {\n                    label: item.label,\n                    checked: selected.indexOf( item.value ) !== -1 ,\n                    key: item.label,\n                    style: { marginBottom: 5 },\n                    onChange: function(value) {\n                        if ( props.onSelect ) {\n                            props.onSelect( item.value, value );\n                        }\n                    }\n                }\n            ),\n        );\n    }\n    var elements = [\n        createElement(\n            __experimentalSpacer,\n            { marginBottom: 5 },\n            createElement(\n                SearchControl,\n                {\n                    value: searchText,\n                    onChange: function(value) {\n                        const filtered = props.categories.filter(function(item){\n                            return item.label.toLowerCase().indexOf(value) !== -1;\n                        });\n                        setItems(filtered);\n                        setSearchText(value);\n                    }\n                }\n            ),\n        ),\n        createElement(\n            __experimentalScrollable,\n            {\n                style: { maxHeight: 200 }\n            },\n            createElement(__experimentalVStack, {}, list)\n        )\n    ];\n    if ( props.label ) {\n        elements.unshift(\n            createElement(\n                __experimentalSpacer,\n                { marginBottom: 5 },\n                createElement( __experimentalHeading, { level: 5 }, props.label )\n            )\n        );\n    }\n\n     return createElement(\n         __experimentalSpacer,\n         { marginBottom: 10 },\n         createElement(__experimentalView, {}, elements)\n     );\n}\n\nregisterBlockType( 'calendar-plus/calendar', {\n    title: __( 'Events Calendar' ),\n    description: __( 'Displays full events calendar.' ),\n    category:  'widgets',\n    icon: {\n        src: 'calendar-alt',\n    },\n    attributes: {\n        category: {},\n        time_format: {},\n        dow_format: {},\n        month_name_format: {},\n        day_format: {},\n        date_format: {}\n    },\n    edit: withSelect( function( select ) {\n        return {\n            categories: select('core').getEntityRecords('taxonomy', 'calendar_event_category', {per_page: -1})\n        };\n    } )( function( props ) {\n        var categoryOptions = [ { value: '', label: __( 'All' ) } ];\n        \n        if( props.categories ) {\n            props.categories.forEach((category) => {\n                categoryOptions.push({value:category.id, label:category.name});\n            });\n        }\n        \n        return createElement('div', {}, [\n            createElement( 'div', {}, createElement( 'img', {src: CalPlusBlocksOptions.calendar_image} ) ),\n            createElement( InspectorControls, {},\n                createElement( PanelBody, { title: __( 'Calendar Settings' ), initialOpen: true },\n                    createElement(SelectControl, {\n                        value: props.attributes.category,\n                        label: __( 'Category' ),\n                        onChange: function(value){\n                            props.setAttributes( { category: value } );\n                        },\n                        options: categoryOptions\n                    }),\n                    createElement(SelectControl, {\n                        value: props.attributes.time_format,\n                        label: __( 'Time format' ),\n                        onChange: function(value){\n                            props.setAttributes( { time_format: value } );\n                        },\n                        options: [\n                            {value: 'g:i a', label: '11:00 pm'},\n                            {value: 'H:i', label: '23:00'},\n                        ]\n                    }),\n                    createElement(SelectControl, {\n                        value: props.attributes.dow_format,\n                        label: __( 'Day of the week format' ),\n                        onChange: function(value){\n                            props.setAttributes( { dow_format: value } );\n                        },\n                        options: [\n                            {value: 'l', label: 'Sunday'},\n                            {value: 'D', label: 'Sun'},\n                        ]\n                    }),\n                    createElement(SelectControl, {\n                        value: props.attributes.month_name_format,\n                        label: __( 'Month name format' ),\n                        onChange: function(value){\n                            props.setAttributes( { month_name_format: value } );\n                        },\n                        options: [\n                            {value: 'M', label: 'Jan'},\n                            {value: 'F', label: 'January'},\n                        ]\n                    }),\n                    createElement(SelectControl, {\n                        value: props.attributes.day_format,\n                        label: __( 'Day format' ),\n                        onChange: function(value){\n                            props.setAttributes( { day_format: value } );\n                        },\n                        options: [\n                            {value: 'd', label: '09'},\n                            {value: 'j', label: '9'},\n                        ]\n                    }),\n                    createElement(SelectControl, {\n                        value: props.attributes.date_format,\n                        label: __( 'Date format' ),\n                        onChange: function(value){\n                            props.setAttributes( { date_format: value } );\n                        },\n                        options: [\n                            {value: 'd/m', label: '15/09'},\n                            {value: 'j/n', label: '15/9'},\n                            {value: 'm/d', label: '09/15'},\n                            {value: 'n/j', label: '9/15'},\n                        ]\n                    }),\n                )\n            )\n        ] )\n    } ),\n    save(){\n        return null;\n    }\n});\n\nregisterBlockType( 'calendar-plus/event', {\n    title: __( 'Single Event' ),\n    description: __( 'Displays single calendar event.' ),\n    category:  'widgets',\n    icon: {\n        src: 'calendar-alt',\n    },\n    attributes: {\n        event_id: {},\n    },\n    edit(props){\n        return createElement('div', {}, [\n            createElement( 'div', {}, createElement( ServerSideRender, {\n                block: \"calendar-plus/event\",\n                attributes: props.attributes,\n                EmptyResponsePlaceholder: function() {\n                    return createElement( 'div', {}, 'test' );\n                }\n            } ) ),\n            createElement( InspectorControls, {},\n                createElement( PanelBody, { title: __( 'Event Settings' ), initialOpen: true },\n                    createElement(TextControl, {\n                        value: props.attributes.event_id,\n                        label: __( 'Event Id' ),\n                        help: __( 'Use Events > Events on admin area to search for your event by title or ID' ),\n                        type: 'number',\n                        onChange: function(value){\n                            props.setAttributes( { event_id: value } );\n                        },\n                    }),\n                )\n            )\n        ] )\n    },\n    save(){\n        return null;\n    }\n});\n\nregisterBlockType( 'calendar-plus/events-list', {\n    title: __( 'Events List' ),\n    description: __( 'Displays events list.' ),\n    category:  'widgets',\n    icon: {\n        src: 'calendar-alt',\n    },\n    attributes: {\n        events: {\n            default: 5\n        },\n        past_events: {\n            default: false\n        },\n        category: {\n            default: ''\n        },\n        display_location: {\n            type: 'boolean',\n            default: false\n        },\n        display_excerpt: {\n            type: 'boolean',\n            default: false\n        },\n        featured_image: {\n            type: 'boolean',\n            default: false\n        },\n        layout: {\n            default: 'list'\n        },\n        columns: {\n            default: 2\n        }\n    },\n    edit: withSelect( function( select ) {\n        return {\n            categories: select('core').getEntityRecords('taxonomy', 'calendar_event_category', {per_page: -1})\n        };\n    } )( function( props ) {\n        var categoryOptions = [ /* { value: 0, label: __( 'All' ) } */ ];\n        var selectedCategories = props.attributes.category\n            .split( ',' )\n            .map(\n                function( value ){\n                    return parseInt( value.trim() );\n                }\n            )\n            .filter(\n                function(num) {\n                    return ! isNaN( num );\n                }\n            );\n        \n        if( props.categories ) {\n            props.categories.forEach((category) => {\n                categoryOptions.push({value:category.id, label:category.name});\n            });\n        }\n        const eventsSettings = [\n            createElement(RangeControl, {\n                value: props.attributes.events,\n                label: __( 'Number of events' ),\n                onChange: function(value){\n                    props.setAttributes( { events: value } );\n                },\n                min: 1,\n                max: 100,\n            }),\n            createElement(\n                CategorySelect,\n                {\n                    label: __( 'Category' ),\n                    categories: categoryOptions,\n                    selected: selectedCategories,\n                    onSelect: function(id, value) {\n                        /*\n                        if ( ! id ) {\n                            if ( value ) {\n                                selectedCategories = props.categories.map(\n                                    function( item ) {\n                                        return item.id;\n                                    }\n                                );\n                                selectedCategories.push( 0 );\n                                props.setAttributes( { category: selectedCategories.join( ',' ) } );\n                            } else {\n                                props.setAttributes( { category: '' } );\n                            }\n\n\n                            return;\n                        }\n                        */\n\n                        const index = selectedCategories.indexOf( id );\n\n                        if ( value && index === -1 ) {\n                            selectedCategories.push( id );\n                        } else if ( index !== -1 ) {\n                            delete selectedCategories[ index ];\n                        }\n                        props.setAttributes( {\n                            category: selectedCategories.join( ',' )\n                        } );\n                    }\n                }\n            ),\n            createElement(ToggleControl, {\n                value: props.attributes.past_events,\n                checked: props.attributes.past_events,\n                label: __( 'Display past events' ),\n                onChange: function(value){\n                    props.setAttributes( { past_events: value } );\n                }\n            }),\n            createElement(__experimentalView, {}, [\n                createElement(\n                    __experimentalSpacer,\n                    {},\n                    createElement(\n                        __experimentalHeading,\n                        { level: 5 },\n                        __( 'Choose fields to display' )\n                    ),\n                ),\n                createElement(\n                    CheckboxControl,\n                    {\n                        label: __( 'Location' ),\n                        checked: props.attributes.display_location,\n                        onChange: function(value) {\n                            props.setAttributes( { display_location: value } );\n                        }\n                    }\n                ),\n                createElement(\n                    CheckboxControl,\n                    {\n                        label: __( 'Excerpt' ),\n                        checked: props.attributes.display_excerpt,\n                        onChange: function(value) {\n                            props.setAttributes( { display_excerpt: value } );\n                        }\n                    }\n                ),\n                createElement(\n                    CheckboxControl, \n                    {\n                        label: __( 'Featured image' ),\n                        checked: props.attributes.featured_image,\n                        onChange: function(value){\n                            props.setAttributes( {featured_image: value} );\n                        }\n                    }\n                ),\n            ]),\n            createElement(SelectControl, {\n                value: props.attributes.layout,\n                label: __( 'Layout' ),\n                options: [\n                    {value: 'list', label: __('List')},\n                    {value: 'grid', label: __('Grid')}\n                ],\n                onChange: function(value){\n                    props.setAttributes( { layout: value } );\n                }\n            }),\n        ];\n        if(props.attributes.layout === 'grid') {\n            eventsSettings.push(createElement(SelectControl, {\n                value: props.attributes.columns,\n                label: __( 'Grid size' ),\n                options: [\n                    {value: 2, 'label': __('2 Columns')},\n                    {value: 3, 'label': __('3 Columns')},\n                    {value: 4, 'label': __('4 Columns')}\n                ],\n                onChange: function(value){\n                    props.setAttributes( { columns: parseInt(value) } );\n                }\n            }));\n        }\n\n        return createElement('div', {}, [\n            createElement( 'div', {}, createElement( ServerSideRender, {\n                block: \"calendar-plus/events-list\",\n                attributes: props.attributes,\n            } ) ),\n            createElement( InspectorControls, {},\n                createElement( PanelBody, { title: __( 'Events Settings' ), initialOpen: true },\n                    ...eventsSettings\n                )\n            )\n        ] )\n    } ),\n    save(){\n        return null;\n    }\n});"],"names":["registerBlockType","wp","blocks","createElement","useState","element","__","i18n","InspectorControls","editor","TextControl","RangeControl","SelectControl","PanelBody","__experimentalHeading","__experimentalView","__experimentalSpacer","__experimentalScrollable","__experimentalVStack","CheckboxControl","SearchControl","ToggleControl","components","withSelect","window","data","serverSideRender","ServerSideRender","CategorySelect","props","searchText","setSearchText","categories","items","setItems","selected","list","item","push","label","checked","indexOf","value","key","style","marginBottom","onChange","onSelect","elements","filtered","filter","toLowerCase","maxHeight","unshift","level","title","description","category","icon","src","attributes","time_format","dow_format","month_name_format","day_format","date_format","edit","select","getEntityRecords","per_page","categoryOptions","forEach","id","name","CalPlusBlocksOptions","calendar_image","initialOpen","setAttributes","options","save","event_id","block","EmptyResponsePlaceholder","help","type","events","default","past_events","display_location","display_excerpt","featured_image","layout","columns","selectedCategories","split","map","parseInt","trim","num","isNaN","eventsSettings","min","max","index","join"],"sourceRoot":""}